(function(){function listItemElement($scope,$compile,resource,showResource,resourceId){var id=resourceId(resource);var element=angular.element('\x3cli class\x3d"raml-console-resource-list-item"\x3e\x3c/li\x3e');element.attr("id",id);updateListItemElement(element,$scope,$compile,resource,$scope.currentId,showResource,resourceId);$scope.$on("methodClick",function(event,currentId,oldId){if(id===currentId||id===oldId)updateListItemElement(element,$scope,$compile,resource,currentId,showResource,resourceId)});
return element}function updateListItemElement(element,$scope,$compile,resource,currentId,showResource,resourceId){element.empty();element.append(consoleResourceElement($scope,$compile,resource,currentId,showResource,resourceId));if(resourceId(resource)===currentId){var resourcePanel=angular.element("\x3cresource-panel\x3e\x3c/resource-panel\x3e");element.append(resourcePanel);$compile(resourcePanel)($scope)}}function consoleResourceElement($scope,$compile,resource,currentId,showResource,resourceId){var element=
angular.element('\x3cdiv class\x3d"raml-console-resource raml-console-clearfix"\x3e\x3c/div\x3e');if(resourceId(resource)===currentId)element.addClass("raml-console-is-active");element.append(resourcePathContainerElement($scope,$compile,resource,currentId,showResource,resourceId));return element}function resourcePathContainerElement($scope,$compile,resource,currentId,showResource,resourceId){var element=angular.element('\x3cdiv class\x3d"raml-console-resource-path-container"\x3e\x3c/div\x3e');if(resource.description)element.addClass("raml-console-resource-with-description");
element.append(resourceHeadingElement(resource,currentId));element.append(resourceTypeElement(resource));element.append(resourceHeadingFlagElement($scope,resource));element.append(resourceLevelDescriptionElement(resource));element.append(methodListElement($scope,resource,currentId,showResource,resourceId));element.append(closeMethodButton($scope,resource,currentId,showResource,resourceId));return element}function resourceHeadingFlagElement($scope,resource){var methodInfo=$scope.methodInfo;if(methodInfo&&
methodInfo.is){var element1=angular.element('\x3cspan class\x3d"raml-console-flag raml-console-resource-heading-flag raml-console-resource-trait" \x3e\x3c/span\x3e');element1.append("\x3cb\x3eTraits:\x3c/b\x3e");element1.append($scope.readTraits(methodInfo.is));return element1}else if(resource.traits){var element2=angular.element('\x3cspan class\x3d"raml-console-flag raml-console-resource-heading-flag" \x3e\x3c/span\x3e');element2.append("\x3cb\x3eTraits:\x3c/b\x3e");element2.append($scope.readTraits(resource.traits));
return element2}return""}function resourceLevelDescriptionElement(resource){var element=angular.element('\x3cspan class\x3d"raml-console-resource-level-description raml-console-marked-content"\x3e\x3c/span\x3e');element.attr("markdown",resource.description);return element}function resourceHeadingElement(resource){var element=angular.element('\x3ch3 class\x3d"raml-console-resource-heading" style\x3d"cursor: default;"\x3e\x3c/h3\x3e');var segments=resource.pathSegments;segments.forEach(function(segment,
index){var span=angular.element("\x3cspan\x3e"+segment.toString()+"\x3c/span\x3e");element.append(span);if(index===segments.length-1)span.addClass("raml-console-resource-path-active")});return element}function resourceTypeElement(resource){if(resource.resourceType){var element=angular.element('\x3cspan class\x3d"raml-console-flag raml-console-resource-heading-flag"\x3e\x3c/span\x3e');element.append("\x3cb\x3eType: \x3c/b\x3e");if(typeof resource.resourceType==="string")element.append(resource.resourceType);
else element.append(Object.keys(resource.resourceType)[0]);return element}return""}var methodElement=function($scope,resource,currentId,method,index,showResource,resourceId){var element=angular.element('\x3cdiv class\x3d"raml-console-tab"\x3e\x3c/div\x3e');var methodSpan=angular.element('\x3cspan class\x3d"raml-console-tab-label"\x3e\x3c/span\x3e');methodSpan.addClass("raml-console-tab-"+method.method);methodSpan.append(method.method.toLocaleUpperCase());element.append(methodSpan);element.on("click",
function(event){showResource($scope,resource,event,index);$scope.$apply()});if(currentId===resourceId(resource)&&$scope.currentMethod===method.method)element.addClass("raml-console-is-active");return element};function methodListElement($scope,resource,currentId,showResource,resourceId){var element=angular.element('\x3cdiv class\x3d"raml-console-tab-list"\x3e\x3c/div\x3e');resource.methods&&resource.methods.forEach(function(method,index){element.append(methodElement($scope,resource,currentId,method,
index,showResource,resourceId))});return element}function closeMethodButton($scope,resource,currentId,showResource,resourceId){if(resourceId(resource)===currentId){var closeButton=angular.element('\x3cbutton class\x3d"raml-console-resource-close-btn"\x3e Close \x3c/button\x3e');closeButton.on("click",function(event){showResource($scope,resource,event,null);$scope.$apply()});return closeButton}return""}RAML.Directives.resourceList=function resourceList($compile,showResource,resourceId){return{restrict:"E",
templateUrl:"directives/resource-tree/resource-list.tpl.html",replace:true,link:function($scope,element){var resources=$scope.resourceGroup;resources.forEach(function(resource,index){if(index===0)return;element.append(listItemElement($scope,$compile,resource,showResource,resourceId))})}}};angular.module("RAML.Directives").directive("resourceList",["$compile","showResource","resourceId",RAML.Directives.resourceList])})();