(function(root){var isEmpty=function(value){return value==null};var toBoolean=function(value){if([0,false,"0","false"].indexOf(value)!==-1)return false;if([1,true,"1","true"].indexOf(value)!==-1)return true;return null};var toNumber=function(value){return isFinite(value)?Number(value):null};var toInteger=function(value){return value%1===0?Number(value):null};var toDate=function(value){return!isNaN(Date.parse(value))?new Date(value):null};var returnValue=function(value){return value};var toUnion=function(value,
key,object,configs){var any=null;configs.forEach(function(config){config.unionTypes.forEach(function(type){any=any||TYPES[type](value,key,object,configs)})});return any};var toArray=function(value,key,object,configs){var arr=null;if(value.charAt(0)!=="["||value.charAt(value.length-1)!=="]")return arr;function arrayFromString(str){var start=0;var end=str.length-1;var items=str.substr(start+1,end-1);return items.length===0?[]:items.split(",")}arr=arrayFromString(value);if(arr.length===0)return arr;
var sanitizeError=false;configs.forEach(function(config){if(config.hasOwnProperty("items"))arr.map(function(elem){var convertedElem=TYPES[config.items](elem,key,object,configs);if(convertedElem===null)sanitizeError=true;return convertedElem})});return sanitizeError?null:arr};function isNativeType(typeName){typeName=typeName.replace("[]","");var nativeTypes=["object","string","number","integer","boolean","date-only","time-only","datetime-only","datetime","file","array"];return nativeTypes.indexOf(typeName)!==
-1}function convertType(config){var newConfig={};Object.keys(config).forEach(function(key){newConfig[key]=config[key]});if(Array.isArray(newConfig.type))newConfig.type=newConfig.type.map(function(aType){var newType=aType.replace("[]","");var parts=aType.split("|");if(parts.length>1){newType="union";newConfig.unionTypes=parts.map(function(part){part=part.trim();return!isNativeType(part)?"object":part})}else newType=!isNativeType(newType)?"object":newType;return newType});return newConfig}var toSanitization=
function(configs,rules,types){configs=Array.isArray(configs)?configs:[configs];var sanitizations=configs.map(function(config){var fns=[];if(typeof types[config.type]==="function")fns.push(types[config.type]);Object.keys(config).filter(function(rule){return rule!=="type"&&rule!=="repeat"&&rule!=="default"}).forEach(function(rule){if(typeof rules[rule]==="function")fns.push(rules[rule](config[rule],rule,config))});var sanitize=function(value,key,object){fns.every(function(fn){value=fn(value,key,object,
configs);return value!=null});return value};return function sanitization(value,key,object){if(isEmpty(value)){if(config["default"]!=null)return sanitization(config["default"],key,object);return config.repeat&&!config.required?[]:value}if(config.repeat){if(!Array.isArray(value))value=[value];value=value.map(function(value){return sanitize(value,key,object)});return value.some(isEmpty)?null:value}return sanitize(value,key,object)}});return function(value,key,object){var result=value;sanitizations.some(function(sanitization){var sanitized=
sanitization(value,key,object);if(sanitized!=null){result=sanitized;return true}return false});return result}};var TYPES={string:String,number:toNumber,integer:toInteger,"boolean":toBoolean,date:toDate,"date-only":toDate,"time-only":toDate,"datetime-only":toDate,"datetime":toDate,object:returnValue,union:toUnion,array:toArray};RAMLSanitize=function(){var sanitize=function(schema){var sanitizations={};Object.keys(schema).forEach(function(param){var config=convertType(schema[param]);var types=sanitize.TYPES;
var rules=sanitize.RULES;sanitizations[param]=toSanitization(config,rules,types)});return function(model){model=model||{};var sanitized={};Object.keys(sanitizations).forEach(function(param){var value=model[param];var sanitize=sanitizations[param];if(Object.prototype.hasOwnProperty.call(model,param))sanitized[param]=sanitize(value,param,model)});return sanitized}};sanitize.TYPES=TYPES;sanitize.RULES={};return sanitize};if(typeof define==="function"&&define.amd)define([],function(){return RAMLSanitize});
else if(typeof exports==="object")module.exports=RAMLSanitize;else root.RAMLSanitize=RAMLSanitize})(this);